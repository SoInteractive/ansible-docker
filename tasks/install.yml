---
- name: Install system dependencies
  package:
    name: "{{ item }}"
    state: present
  retries: 2
  with_items: "{{ docker_dependencies }}"

- name: Remove deprecated system-wide libs
  package:
    name: python-docker
    state: absent

- name: Remove deprecated python libs
  pip:
    name: docker-py
    state: absent

- name: Install docker-compose
  pip:
    name: docker-compose==1.15.0
    state: present

- block:
  #- name: add specific key
  #  apt_key:
  #    keyserver: hkp://p80.pool.sks-keyservers.net:80
  #    id: 58118E89F3A912897C070ADBF76221572C52609D
  #    state: present
  #  environment:
  #    http_proxy: "{{ http_proxy | default('') }}"
  #    https_proxy: "{{ https_proxy | default('') }}"
  - name: Download GPG key
    get_url:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      dest: "/tmp/docker.gpg"
    become: no
    run_once: true
    delegate_to: localhost

  - name: add GPG key
    apt_key:
      data: "{{ lookup('file', '/tmp/docker.gpg') }}"
      state: present

  - name: add docker repository
    template:
      src: docker.ubuntu.repo.j2
      dest: /etc/apt/sources.list.d/docker.list
  when: ansible_pkg_mgr == "apt"

- name: add docker repository
  template:
    src: docker.redhat.repo.j2
    dest: /etc/yum.repos.d/docker-main.repo
  when: ansible_pkg_mgr == "yum"

- name: Remove old versions
  package:
    name: "{{ item }}"
    state: absent
  with_items:
    - lxc-docker
    - docker-engine

- name: Install docker
  package:
    name: "{{ docker_package | default('docker-ce') }}"
    state: present
    update_cache: yes
  notify:
    - restart docker
